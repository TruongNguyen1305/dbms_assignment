// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlserver"
  url      = env("DATABASE_URL")
}

model User {
  id          Int     @id @default(autoincrement())
  firstname   String   
  lastname    String
  username    String
  email       String  @unique
  password    String  @unique
  isAdmin     Boolean @default(false)
  phone       String?
  gender      String?
  // cart        Cart?
  addresses   Address[]
  orders      Order[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Product {
  id            Int     @id @default(autoincrement())
  company       String   
  title         String
  desc          String
  img           String  //Mảng các ảnh nhưng vì mssql k hỗ trợ kiểu mảng nên thay bằng string được phân cách bằng ","
  alt           String  
  color         String  //Tương tự img
  gender        String  //Tương tự img
  size          String  //Tương tự img
  price         Int
  discountPrice Int
  details       Detail[]
}

model Cart {
  id            Int       @id
  // user          User      @relation(fields: [userId], references: [id])
  // userId        Int       @unique
  details       Detail[]
}

model Detail {
  id            Int     @id @default(autoincrement())
  product       Product @relation(fields: [productId], references: [id])
  productId     Int
  cart          Cart?    @relation(fields: [cartId], references: [id])
  cartId        Int?
  quantity      Int
  itemTotal     Int
  order         Order?  @relation(fields: [orderId], references: [id])
  orderId       Int?
}

model Address {
  id            Int       @id @default(autoincrement())
  user          User      @relation(fields: [userId], references: [id])
  userId        Int       
  firstname     String 
  lastname      String
  phone         String
  secondPhone   String?
  streetAddress String
  moreInfo      String?
  city          String
  state         String
  country       String?
  zipcode       String?
  checked       Boolean  @default(false)
  orders        Order[]
}

model Order {
  id            Int       @id @default(autoincrement())
  user          User      @relation(fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  userId        Int       
  details       Detail[]
  amount        Int
  address       Address   @relation(fields: [addressId], references: [id])
  addressId     Int       
  status        String    @default("pending")
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}
